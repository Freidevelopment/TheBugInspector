@using TheBugInspector.Client.Helpers
@implements IDisposable

@inject NavigationManager NavigationManager

<!-- Menu with dropdown + Button -->
<header class="navbar navbar-expand-lg bg-light shadow-sm">
    <div class="container">
        <!-- Navbar Logo-->
        <a href="/" class="navbar-brand">
            <img src="/Images/BugInspector.svg" width="50">
            Bug Inspector
        </a>

        <!-- Mobile menu toggler (Hanburger) -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse1" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <!-- Navbar collapse -->
        <nav id="navbarCollapse1" class="collapse navbar-collapse">
            <hr class="d-lg-none">
            <ul class="navbar-nav me-auto">
                <li class="nav-item me-auto ">
                    <AuthorizeView Context="NavDashbar">
                        <Authorized>

                            @if (NavDashbar.User.IsInRole("Admin"))
                            {
                                <NavLink class="nav-link" href="/dashboard/Admin" Match="NavLinkMatch.All">
                                    Dashboard
                                </NavLink>
                            }
                            else if (NavDashbar.User.IsInRole("ProjectManager"))
                            {
                                <NavLink class="nav-link" href="/dashboard/Projectmanager" Match="NavLinkMatch.All">
                                    Dashboard
                                </NavLink>
                            }
                            else if (NavDashbar.User.IsInRole("Developer"))
                            {
                                <NavLink class="nav-link" href="/dashboard/Developer" Match="NavLinkMatch.All">
                                    Dashboard
                                </NavLink>
                            }
                            else if (NavDashbar.User.IsInRole("Submitter"))
                            {
                                <NavLink class="nav-link" href="/dashboard/Submitter" Match="NavLinkMatch.All">
                                    Dashboard
                                </NavLink>
                            }
                        </Authorized>
                        <NotAuthorized>

                            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                                Home
                            </NavLink>
                        </NotAuthorized>
                    </AuthorizeView>
                </li>
                <AuthorizeView Context="NavbarMenu">
                    <Authorized>
                        <li class="nav-item me-auto">
                            <NavLink class="nav-link" href="/companies/Index">
                                Company
                            </NavLink>
                        </li>
                        <li class="nav-item dropdown me-auto">
                            <NavLink class="nav-link dropdown-toggle" href="author" Match="NavLinkMatch.Prefix" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                                Projects
                            </NavLink>
                            <ul class="dropdown-menu  dropdown-menu-end">
                                @if (NavbarMenu.User.IsInRole("Admin"))
                                {
                                    <li>
                                        <a class="dropdown-item" href="/projects/index">
                                            Active Projects
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li>
                                        <a class="dropdown-item" href="/projects/personal/Index">
                                            My Projects
                                        </a>
                                    </li>
                                }
                                <li>
                                    <a class="dropdown-item" href="/archived/projects/Index">
                                        Archived Projects
                                    </a>
                                </li>
                            </ul>
                        </li>
                        @if (NavbarMenu.User.IsInRole("Admin"))
                        {
                            <li class="nav-item dropdown me-auto">
                                <NavLink class="nav-link dropdown-toggle" href="author" Match="NavLinkMatch.Prefix" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                                    Tickets
                                </NavLink>
                                <ul class="dropdown-menu dropdown-menu-end">

                                    <li>
                                        <a class="dropdown-item" href="/tickets/active/Index">
                                            Active Tickets Index
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="/tickets/archived/Index">
                                            Archived Tickets Index
                                        </a>
                                    </li>
                                </ul>
                            </li>

                        }
                        else
                        {
                            <li class="nav-item me-auto ">
                                <NavLink class="nav-link" href="/tickets/Personal/Index">
                                    My Tickets
                                </NavLink>
                            </li>
                        }
                        <ul class="navbar-nav me-auto mb-2 mb-md-0">
                            <li class="nav-item dropdown">
                                <NavLink class="nav-link dropdown-toggle" href="Account" Match="NavLinkMatch.Prefix" data-bs-toggle="dropdown">
                                    <i class="bi bi-stack"></i>
                                    <span>Account</span>
                                </NavLink>
                                <ul class="dropdown-menu dropdown-menu-end text-nowrap px-2 m-2">
                                    <AuthorizeView Context="AccountManager">
                                        <Authorized>
                                            @{
                                                UserInfo? userInfo = UserInfoHelper.GetUserInfo(AccountManager);
                                            }

                                            <li class="nav-item">
                                                <NavLink class="nav-link" href="Account/Manage">
                                                    <img class="profile-picture" src="@userInfo?.ProfilePictureUrl" />
                                                    <span>Manage Account: @userInfo?.FullName</span>
                                                </NavLink>
                                            </li>
                                            <li class="nav-item">
                                                <form action="Account/Logout" method="post">
                                                    <AntiforgeryToken />
                                                    <input type="hidden" name="ReturnUrl" value="" />
                                                    <button type="submit" class="nav-link">
                                                        <i class="bi bi-arrow-bar-left"></i>
                                                        Logout
                                                    </button>
                                                </form>
                                            </li>
                                        </Authorized>

                                    </AuthorizeView>
                                </ul>
                            </li>

                        </ul>
                    </Authorized>

                    <NotAuthorized>
                        <ul class="navbar-nav me-auto mb-2 mb-md-0">
                            <li class="nav-item dropdown">
                                <NavLink Match=NavLinkMatch.Prefix class="nav-link dropdown-toggle" href="Account" data-bs-toggle="dropdown">
                                    <i class="bi bi-stack"></i>
                                    <span>Account</span>
                                </NavLink>
                                <ul class="dropdown-menu dropdown-menu-end text-nowrap px-2 m-2">

                                    <li class="nav-iem">
                                        <NavLink class="nav-link" href="Account/Register">
                                            <i class="bi bi-person"></i>
                                            <span>Register</span>
                                        </NavLink>
                                    </li>
                                    <li class="nav-item">
                                        <NavLink class="nav-link" href="Account/Login">
                                            <i class="bi bi-person-badge"></i>
                                            <span>Login</span>
                                        </NavLink>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </NotAuthorized>
                </AuthorizeView>

            </ul>

        </nav>
    </div>
</header>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
