@page "/tickets/Index/{id:int}"

@using TheBugInspector.Client.Components.UI.Projects
@using TheBugInspector.Client.Components.UI.Tickets
@using TheBugInspector.Client.Helpers
@using TheBugInspector.Client.Services
@using TheBugInspector.Client.Services.Interfaces

@rendermode InteractiveWebAssembly

@inject ITicketDTOService TicketService


<PageTitle>BugInspector | Ticket: @ticket.Title</PageTitle>


<div class="container-xxl">


    @if (ticket is not null)
    {
        <h1>Ticket Details: @ticket.Title</h1>

            <TicketDetailsCard Ticket="ticket" />
        

    }
    else
    {
        <span class="text-danger">@ErrorMessage</span>
    }
</div>

@code {
    #region Parameters
    [Parameter]
    public int Id { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? AuthStateTask { get; set; }
    #endregion

    #region State
    private TicketDTO? ticket;
    private string? ErrorMessage = string.Empty;
    private UserInfo? userInfo;
    #endregion

    #region Methods
    protected async override Task OnInitializedAsync()
    {
        try
        {
            ErrorMessage = string.Empty;

            userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);

            ticket = await TicketService.GetTicketByIdAsync(Id, userInfo!.CompanyId);

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            // Change this errormessage
            ErrorMessage = "Something went wrong, check the DevTools";
        }
    }
    #endregion
}
