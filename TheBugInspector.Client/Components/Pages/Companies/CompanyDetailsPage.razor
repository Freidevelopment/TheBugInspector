@page "/companies/Index"
@using TheBugInspector.Client.Components.UI.Companies
@using TheBugInspector.Client.Helpers

@inject ICompanyDTOService CompanyService

@rendermode InteractiveWebAssembly

<PageTitle>BugInspector | Company</PageTitle>

@if (company is not null)
{


    <div class="container">
        <div class="text-center">
            <h1>@company.Name</h1>
            <img src="@company.ImageUrl" class="img-fluid" />
            <div class="text-center">
                
            </div>
            <div class="mt-4">
                <h3>Description</h3>
                @company.Description
            </div>
            <div class="row row-cols-4 mt-5">
                <div class="col">
                    <a href="/projects/Index" class="btn btn-primary">Active Projects</a>
                </div>
                <div class="col">
                    <a href="/archived/projects/Index" class="btn btn-primary">Archived Projects</a>
                </div>
                <div class="col">
                    <a href="/tickets/Index" class="btn btn-primary">All Tickets</a>
                </div>
                <div class="col">
                    <div>
                        <AuthorizeView Context="AdminCompanyControl">
                            @if (AdminCompanyControl.User.IsInRole("Admin"))
                            {
                                <a href="/Company/Edit/@company.Id" class="btn btn-primary text-end">
                                    Edit Company Page
                                </a>
                            }
                        </AuthorizeView>
                    </div>
                </div>
            </div>
            <div class="mt-5 mb-5">
                <div>
                    <h3>Company Members</h3>
                </div>
                <ul class="list-group">
                    @foreach (UserDTO member in Members)
                    {
                        <CompanyMembersDisplay @key="member.UserId"
                                               User="member"
                                               UserInfo="userInfo"
                                               OnSubmit="UpdateRole" />
                    }

                </ul>
            </div>
            <div>
                <ul class="list-group">
                    @foreach(UserDTO manager in projectManagers)
                    {
                        <li class="text-primary list-group-item">@manager.FullName</li>
                    }
                </ul>
            </div>
            
        </div>
    </div>
}

@code {
    #region Parameters
    [Parameter]
    public int Id { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? AuthStateTask { get; set; }
    #endregion

    #region State
    private CompanyDTO? company;
    private string? ErrorMessage = string.Empty;
    private IEnumerable<UserDTO> Members = [];
    private UserInfo? userInfo;
    private IEnumerable<UserDTO> projectManagers = [];
    #endregion

    #region Methods
    protected override async Task OnInitializedAsync()
    {
        try
        {
            userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);

            company = await CompanyService.GetCompanyByIdAsync(userInfo!.CompanyId);

            Members = await CompanyService.GetCompanyMembersAsync(company!.Id);

            projectManagers = await CompanyService.GetUsersInRoleAsync(nameof(Roles.ProjectManager), userInfo!.CompanyId);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            ErrorMessage = "Something went wrong, check the Devtools";
        }
    }

    private async Task UpdateRole(UserDTO user)
    {
        try
        {
            await CompanyService.UpdateUserRoleAsync(user, userInfo!.UserId);

            Members = await CompanyService.GetCompanyMembersAsync(company!.Id);

            projectManagers = await CompanyService.GetUsersInRoleAsync(nameof(Roles.ProjectManager), userInfo!.CompanyId);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            ErrorMessage = "Something went wrong, check the Devtools";
        }
    }
    #endregion

}
